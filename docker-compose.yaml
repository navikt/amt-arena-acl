version: '3.7'
services:
  amt-arena-acl-postgres:
    image: 'postgres:14-alpine'
    container_name: amt-arena-acl-postgres
    #    volumes:
    #      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - '5454:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=qwerty
      - POSTGRES_DB=amt-arena-acl
  mock-oauth2-server:
    image: ghcr.io/navikt/mock-oauth2-server:0.3.5
    ports:
      - '8082:8082'
    environment:
      SERVER_PORT: 8082

  ###### KAFKA ######
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "trade:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9093
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    depends_on:
      - kafka

  prometheus:
    build:
      context: ./config/local/prometheus
      dockerfile: Dockerfile
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/local/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./config/local/grafana/config.monitoring

volumes:
  prometheus_data: { }
  grafana_data: { }
#  postgres-db-volume:

