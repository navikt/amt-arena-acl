name: Deploy application
on:
  workflow_dispatch: # This workflow can be triggered manually from: https://github.com/navikt/amt-arena-acl/actions/workflows/deploy.yaml
  push:
    branches:
      - main

env:
  PRINT_PAYLOAD: true

jobs:
  test-build-and-push:
    permissions:
      contents: "write"
      id-token: "write"
      security-events: "write"
    name: Test, build and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'maven'
      - name: Build maven artifacts
        run: mvn -B package
      - name: Dependency submission (for dependabot)
        uses: advanced-security/maven-dependency-submission-action@v4
      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: amt
          tag: ${{ github.sha }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    name: Deploy application to dev
    needs: test-build-and-push
    runs-on: ubuntu-latest
    permissions:
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yaml
          VAR: image=${{ needs.test-build-and-push.outputs.image }}

  deploy-prod:
    name: Deploy application to production
    needs: [ test-build-and-push, deploy-dev ]
    runs-on: ubuntu-latest
    permissions:
      id-token: "write"
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais-prod.yaml
          VAR: image=${{ needs.test-build-and-push.outputs.image }}